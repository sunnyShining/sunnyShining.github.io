import{_ as s,c as i,o as t,R as a}from"./chunks/framework.YS-5hJ7A.js";const n="/docs/assets/box-sizing.7_JvxdbO.png",b=JSON.parse('{"title":"","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"基","7":"础"},"headers":[],"relativePath":"css/index.md","filePath":"css/index.md"}'),e={name:"css/index.md"},d=a(`<h2 id="css有哪几种方法隐藏元素-它们之前有哪些区别" tabindex="-1">css有哪几种方法隐藏元素，它们之前有哪些区别 <a class="header-anchor" href="#css有哪几种方法隐藏元素-它们之前有哪些区别" aria-label="Permalink to &quot;css有哪几种方法隐藏元素，它们之前有哪些区别&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><table><thead><tr><th></th><th>是否占据空间</th><th>是否导致浏览器重排重绘</th><th>能否触发点击事件</th></tr></thead><tbody><tr><td>display: none</td><td>不占空间</td><td>会导致浏览器重排和重绘</td><td>不会触发其点击事件</td></tr><tr><td>visibility: hidden</td><td>占空间</td><td>不会导致浏览器重排和重绘</td><td>不会触发其点击事件</td></tr><tr><td>opacity: 0</td><td>占空间</td><td>不会导致浏览器重排和重绘</td><td>会触发其点击事件</td></tr><tr><td>height、width属性为0</td><td>不占空间</td><td>可能会导致浏览器重排和重绘</td><td>设置为0后不会触发其点击事件</td></tr></tbody></table><h2 id="对css盒模型的理解" tabindex="-1">对CSS盒模型的理解 <a class="header-anchor" href="#对css盒模型的理解" aria-label="Permalink to &quot;对CSS盒模型的理解&quot;">​</a></h2><p>CSS 有两种盒模型：标准盒模型和IE盒模型。</p><p>标准盒模型：元素的宽度和高度只包括内容（content），不包括内边距（padding）、边框（border）和外边距（margin）。 IE盒模型：元素的宽度和高度包括内容（content）、内边距（padding）和边框（border），但不包括外边距（margin）。</p><p><img src="`+n+'" alt="盒模型"></p><h2 id="说一下-box-sizing" tabindex="-1">说一下 box-sizing？ <a class="header-anchor" href="#说一下-box-sizing" aria-label="Permalink to &quot;说一下 box-sizing？&quot;">​</a></h2><p><code>box-sizing</code> 主要分为 <code>border-box</code> 和 <code>content-box</code></p><p>拿 width 举例：</p><p><code>content-box： width = content + padding + border</code></p><p><code>border-box： width = content</code></p><p>为了方便样式计算，一般采用 <code>border-box</code></p>',13),h=[d];function p(l,o,r,k,c,E){return t(),i("div",null,h)}const y=s(e,[["render",p]]);export{b as __pageData,y as default};
