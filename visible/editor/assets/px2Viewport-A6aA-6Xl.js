import{f as t,h as o,F as r,N as n,O as e,W as l,d as c,m as a,u as d}from"./index-fcgqg5a3.js";const u=n("h1",null,"@reaf-toolkit/postcss-px-to-viewport",-1),h=n("p",null,[e("将 px 单位转换为视口单位的 (vw, vh, vmin, vmax) 的 "),n("a",{href:"https://github.com/postcss/postcss"},"PostCSS"),e(" 插件.")],-1),x=n("h2",null,"简介",-1),_=n("p",null,"如果你的样式需要做根据视口大小来调整宽度，这个脚本可以将你 CSS 中的 px 单位转化为 vw，1vw 等于 1/100 视口宽度。",-1),g=n("h3",null,"输入",-1),m=n("pre",null,[n("code",{class:"language-css","v-pre":"true"},".class {\n  margin: -10px 0.5vh;\n  padding: 5vmin 9.5px 1px;\n  border: 3px solid black;\n  border-bottom-width: 1px;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.class2 {\n  padding-top: 10px; /* px-to-viewport-ignore */\n  /* px-to-viewport-ignore-next */\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 20px;\n  line-height: 30px;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n")],-1),v=n("h3",null,"输出",-1),w=n("pre",null,[n("code",{class:"language-css","v-pre":"true"},".class {\n  margin: -3.125vw 0.5vh;\n  padding: 5vmin 2.96875vw 1px;\n  border: 0.9375vw solid black;\n  border-bottom-width: 1px;\n  font-size: 4.375vw;\n  line-height: 6.25vw;\n}\n\n.class2 {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  /* Any other comment */\n  border: 1px solid black;\n  margin-bottom: 1px;\n  font-size: 6.25vw;\n  line-height: 9.375vw;\n}\n\n@media (min-width: 750px) {\n  .class3 {\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n")],-1),b=n("h2",null,"上手",-1),f=n("h3",null,"安装",-1),k=n("p",null,"使用 npm 安装",-1),y=n("pre",null,[n("code",{"v-pre":"true"},"$ npm install @reaf-toolkit/postcss-px-to-viewport --save-dev\n")],-1),V=n("p",null,"或者使用 yarn 进行安装",-1),P=n("pre",null,[n("code",{"v-pre":"true"},"$ yarn add -D @reaf-toolkit/postcss-px-to-viewport\n")],-1),E=n("h3",null,"配置参数",-1),C=n("p",null,"默认参数:",-1),R=n("pre",null,[n("code",{class:"language-js","v-pre":"true"},'{\n  unitToConvert: "px",\n  viewportWidth: 320,\n  viewportHeight: 568,\n  unitPrecision: 5,\n  viewportUnit: "vw",\n  fontViewportUnit: "vw",\n  selectorBlackList: [],\n  propList: ["*"],\n  minPixelValue: 1,\n  mediaQuery: false,\n  replace: true,\n  landscape: false,\n  landscapeUnit: "vw",\n  landscapeWidth: 568,\n}\n')],-1),U=n("pre",null,[n("code",{class:"language-ts","v-pre":"true"},"interface IOptions {\n  /** 转换单位 */\n  unitToConvert?: string;\n  /** viewport宽，可根据文件自定义 */\n  viewportWidth?: ((file: string) => number) | number;\n  /** viewport高 */\n  viewportHeight?: number;\n  /** 小数点 */\n  unitPrecision?: number;\n  /** viewport单位 */\n  viewportUnit?: string;\n  /** 字体单位 */\n  fontViewportUnit?: string;\n  /** 黑名单 */\n  selectorBlackList?: string[];\n  /** 属性列表 */\n  propList?: string[];\n  /** 最小转换单位 */\n  minPixelValue?: number;\n  /** 是否开启媒体查询 */\n  mediaQuery?: boolean;\n  /** 是否直接更换属性值，而不添加备用属性 */\n  replace?: boolean;\n  /** 是否添加根据 landscapeWidth 生成的媒体查询条件 @media (orientation: landscape) */\n  landscape?: boolean;\n  /** 横屏时使用的单位 */\n  landscapeUnit?: string;\n  /** 横屏时使用的视口宽度 */\n  landscapeWidth?: number;\n  /** 根据文件自定义单位替换 */\n  createPxReplace?: (\n    file: string,\n    pixels: number,\n    toFixed?: (number: number, precision: number) => number,\n    unitPrecision?: number\n  ) => string;\n  /** 排除文件 */\n  exclude?: RegExp | RegExp[];\n  /** 包含文件 */\n  include?: RegExp | RegExp[];\n}\n")],-1),z=n("h4",null,"Ignoring",-1),B=n("p",null,"You can use special comments for ignore conversion of single lines:",-1),L=n("ul",null,[n("li",null,[n("code",null,"/* px-to-viewport-ignore-next */"),e(" — on a separate line, prevents conversion on the next line.")]),n("li",null,[n("code",null,"/* px-to-viewport-ignore */"),e(" — after the property on the right, prevents conversion on the same line.")])],-1),S=n("p",null,"Example:",-1),W=n("pre",null,[n("code",{class:"language-css","v-pre":"true"},"/* example input: */\n.class {\n  /* px-to-viewport-ignore-next */\n  width: 10px;\n  padding: 10px;\n  height: 10px; /* px-to-viewport-ignore */\n  border: solid 2px #000; /* px-to-viewport-ignore */\n}\n\n/* example output: */\n.class {\n  width: 10px;\n  padding: 3.125vw;\n  height: 10px;\n  border: solid 2px #000;\n}\n")],-1),N=l("<p>There are several more reasons why your pixels may not convert, the following options may affect this: <code>propList</code>, <code>selectorBlackList</code>, <code>minPixelValue</code>, <code>mediaQuery</code>, <code>exclude</code>, <code>include</code>.</p><h4>使用 PostCss 配置文件时</h4><p>在<code>postcss.config.js</code>添加如下配置</p>",3),T=n("pre",null,[n("code",{class:"language-js","v-pre":"true"},'module.exports = {\n  plugins: {\n    // ...\n    "@reaf-toolkit/postcss-px-to-viewport": {\n      // options\n    },\n  },\n};\n')],-1),j=n("h2",null,"借鉴自",-1),A=n("ul",null,[n("li",null,"https://github.com/evrone/postcss-px-to-viewport")],-1);function F(i,p){return t(),o(r,null,[u,h,x,_,g,m,v,w,b,f,k,y,V,P,E,C,R,U,z,B,L,S,W,N,T,j,A],64)}const s={render:F};s.__hmrId="/Users/sunshine/gitStore/visible/packages/postcss-px-to-viewport/README.md";const I={class:"markdown-body"},D=c({__name:"px2Viewport",setup(i){return(p,Q)=>(t(),o("div",I,[a(d(s))]))}});export{D as default};
